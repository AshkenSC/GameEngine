#version 400 core
// if it causes problem use
//#version 140 core

in vec3 position;
in vec2 textureCoords;
in vec3 normal;

out vec2 pass_textureCoords;
out vec3 surfaceNormal;
out vec3 toLightVector;

uniform mat4 transformationMatrix;
uniform mat4 projectionMatrix;
uniform mat4 viewMatrix;
uniform vec3 lightPosition;

void main(void){
	
	// originally it's gl_Position =transformationMatrix * projectionMatrix *  vec4(position, 1.0);
	// but the squad didn't show up until a guy on YouTube said I should multiply transMatrix first
	
	// since the matrices multiply order is different, I do not use the worldPosition = transformationMatrix * vec4(position, 1.0)
	// see https://youtu.be/bcxX0R8nnDs?t=508
	gl_Position = transformationMatrix * viewMatrix * projectionMatrix * vec4(position, 1.0);
	pass_textureCoords = textureCoords;
	
	// since the matrices multiply order is different, I change some transformationMatrix below to projection Matrix
	// in order to get correct display
	surfaceNormal = (projectionMatrix * vec4(normal, 0.0)).xyz;
	toLightVector = lightPosition - (projectionMatrix * vec4(position, 1.0)).xyz;
}